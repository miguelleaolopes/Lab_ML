from initialization import *
from linear import *
from ridge import *
from linear import *

print('This program determines the best model and parameters without clearing training data with outliers')

N_val = 500
split_data(N_val,0.2)

print('Calculating mse for linear model ....')
for i in trange(N_val):
    mse_list = []
    lin_model = linear_model(x_train[i],y_train[i])
    y_pred_lin = lin_model.predict(x_test[i])
    mse_list.append(mean_squared_error(y_pred_lin,y_test[i]))

sse_lin = np.mean(mse_list)

print('Calculating best alpha for ridge model ....')

best_ridalpha_lis = []
for i in trange(N_val):
    ridcv_model = ridge_modelcv(x_train[i],y_train[i],np.linspace(0.001,1,100),None,fit_int=False,solv=False)
    best_ridalpha_lis.append(ridcv_model[1]['alpha'])

best_ridalpha = np.mean(best_ridalpha_lis)

print(best_ridalpha)